{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/AVR-biosecurity-bioinformatics/freyr",
    "title": "AVR-biosecurity-bioinformatics/freyr pipeline parameters",
    "description": "Metabarcoding pipeline [IN DEVELOPMENT]",
    "type": "object",
    "defs": {
        "main_arguments": {
            "title": "Main arguments",
            "type": "object",
            "description": "Main arguments for the pipeline.",
            "required": [ 
                "samplesheet"
            ],
            "properties": {
                "samplesheet": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.csv$",
                    "exists": true,
                    "description": "Path to comma-separated file containing the samplesheet.",
                    "errorMessage": "File must exist and be a CSV file with the extension '.csv'.",
                    "schema": "assets/schema_samplesheet.json"
                },
                "primer_params": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.csv$",
                    "exists": true,
                    "description": "Path to comma-separated file containing parameters for each PCR primer pair.",
                    "errorMessage": "File must exist and be a CSV file with the extension '.csv'.",
                    "schema": "assets/schema_primer_params.json"
                },
                "train_idtaxa": {
                    "type": "string",
                    "pattern": "^(formatted|unformatted)$",
                    "description": "Train IDTAXA model(s) using the reference database .fasta file(s), which are correctly formatted ('formatted') or unformatted ('unformatted').",
                    "errorMessage": "Must be 'formatted' or 'unformatted'."
                },
                "extension": {
                    "type": "string",
                    "pattern": "^[^\\s,]$",
                    "description": "Extension of the FastQ read files, immediately after the digit indicating forward/reverse identity. Used to help match files to samples when explicit read paths are not provided.",
                    "errorMessage": "Read extension must not contain spaces or commas."
                },
                "seq_type": {
                    "type": "string",
                    "pattern":"^(illumina|nanopore|pacbio)$",
                    "description": "Input data type: 'illumina' (Illumina-style short-read; default), 'nanopore' (ONT long-read) or 'pacbio' (PacBio long-read).",
                    "errorMessage": "Must be set to 'illumina', 'nanopore' or 'pacbio'.",
                    "default": "illumina"
                },
                "paired": {
                    "type": "boolean",
                    "description": "Illumina sequencing input data is paired-end.",
                    "errorMessage": "Must be set to 'true' or 'false'.",
                    "default": true
                },
                "miseq_internal": {
                    "type": "boolean",
                    "description": "Data generated by an Agriculture Victoria MiSeq machine, runs QC. MiSeq data folders should be placed in './data'",
                    "errorMessage": "Must be set to 'true' or 'false'.",
                    "default": false
                },
                "miseq_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "pattern": "^\\S+$",
                    "description": "Path to directory/folder containing the MiSeq input data.",
                    "errorMessage": "Directory must exist and its name cannot contain spaces."
                },
                "primer_error_rate": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Error rate when identifying and trimming primer sequences ('cutadapt -e').",
                    "errorMessage": "Must be set to a number >=0.",
                    "help_text": "Specifies 'cutadapt -e': values between 0 and <1 set an error rate per primer base (not including Ns); values >=1 set the maximum number of allowed errors per primer.",
                    "default": 1
                },
                "primer_n_trim": {
                    "type": "boolean",
                    "description": "Recognise ambiguous bases in reads when trimming primers.",
                    "errorMessage": "Must be set to 'true' or 'false'.",
                    "help_text": "Use 'cutadapt --match-read-wildcards' to recognise N bases in reads when trimming primers. Recommended only for low-quality data input when trying to retain as much data as possible.",
                    "default": false
                },
                "high_sensitivity": {
                    "type": "boolean",
                    "description": "Run DADA2 ASV inference in high-sensitivity mode, ie. use pseudo-pooling.",
                    "errorMessage": "Must be set to 'true' or 'false'.",
                    "help_text": "Run DADA2 ASV inference in high-sensitivity mode, ie. use pseudo-pooling.",
                    "default": true
                },
                "dada_band_size": {
                    "type": "integer",
                    "description": "Set BAND_SIZE parameter for dada2::dada denoising function. For explanation, see dada2::setDadaOpt().",
                    "errorMessage": "Must be an integer. Set to a negative number to turn off banding.",
                    "help_text": "Set BAND_SIZE parameter for dada2::dada denoising function. For explanation, see dada2::setDadaOpt().",
                    "default": 16
                },
                "dada_homopolymer": {
                    "type": "integer",
                    "maximum": -1,
                    "description": "Set HOMOPOLYMER_GAP_PENALTY parameter for dada2::dada denoising function. For explanation, see dada2::setDadaOpt().",
                    "errorMessage": "Must be a negative integer. Leave unset (default) to treat homopolymer gaps like regular gaps.",
                    "help_text": "Set HOMOPOLYMER_GAP_PENALTY parameter for dada2::dada denoising function. For explanation, see dada2::setDadaOpt()."
                },
                "chimera_sample_frac": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Minimum fraction of samples in which a sequence must be flagged as a chimera to be classified a chimera.",
                    "errorMessage": "Must be a number between 0-1.",
                    "help_text": "Minimum fraction of samples in which a sequence must be flagged as a chimera to be classified a chimera. Only considers samples in which the sequence is present. See dada2::isBimeraDenovoTable(minSampleFraction).",
                    "default": 0.9
                },
                "chunk_taxassign": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of sequences to taxonomically assign per process.",
                    "errorMessage": "Must be an integer >= 1, preferably >10.",
                    "help_text": "Number of sequences to taxonomically assign per process. Decreasing this may speed up the pipeline when many CPUs are available. Setting to very low values (<10) is not recommended.",
                    "default": 100
                },
                "accumulation_curve": {
                    "type": "boolean",
                    "description": "Generate accumulation curves for each sample per PCR primer pair.",
                    "errorMessage": "Must be set to 'true' or 'false'.",
                    "help_text": "Generate accumulation curves for each sample per PCR primer pair. On large datasets, this can take a long time.",
                    "default": true
                },
                "merge_clusters": {
                    "type": "string",
                    "pattern": "^(central|lca|frequency|rank|abundance)$",
                    "description": "Generate additional output files where each cluster of filtered ASVs is merged to one representative sequence, with its taxonomy assigned using this method.",
                    "errorMessage": "Must be set to 'central', 'lca', 'frequency', 'rank' or 'abundance'.",
                    "help_text": "Generate additional output files where each cluster of filtered ASVs is merged to one representative sequence, with its taxonomy assigned using this method. For details, see documentation."
                },
                "slurm_account": {
                    "type": "string",
                    "description": "Account to use when submitting SLURM jobs.",
                    "help_text": "Account to use when submitting SLURM jobs.",
                    "default": "default"
                }
            }
        },
        "pp_override_options": {
            "title": "Overrides for primer parameters in given .csv file (--primer_params)",
            "type": "object",
            "description": "Use to override primer parameters passed through the --primer_params .csv file. Specific values for each primer pair can be set in the format '[A]val1;[B]val2', where A and B are the primer pair names (ie. 'primers').",
            "properties": {
                "pp_primers": {
                    "type": "string",
                    "description": "Override for 'primers' primer parameter. Only use without '--primer_params'."
                },
                "pp_locus": {
                    "type": "string",
                    "description": "Override for 'locus' primer parameter. Only use without '--primer_params'."
                },
                "pp_for_primer_seq": {
                    "type": "string",
                    "description": "Override for 'for_primer_seq' primer parameter. Only use without '--primer_params'."
                },
                "pp_rev_primer_seq": {
                    "type": "string",
                    "description": "Override for 'rev_primer_seq' primer parameter. Only use without '--primer_params'."
                },              
                "pp_max_primer_mismatch": {
                    "type": "string",
                    "description": "Override for 'max_primer_mismatch' primer parameter."
                },
                "pp_read_min_length": {
                    "type": "string",
                    "description": "Override for 'read_min_length' primer parameter."
                },
                "pp_read_max_length": {
                    "type": "string",
                    "description": "Override for 'read_max_length' primer parameter."
                },
                "pp_read_max_ee": {
                    "type": "string",
                    "description": "Override for 'read_max_ee' primer parameter."
                },
                "pp_read_trunc_length": {
                    "type": "string",
                    "description": "Override for 'read_trunc_length' primer parameter."
                },
                "pp_read_trim_left": {
                    "type": "string",
                    "description": "Override for 'read_trim_left' primer parameter."
                },
                "pp_read_trim_right": {
                    "type": "string",
                    "description": "Override for 'read_trim_right' primer parameter."
                },
                "pp_asv_min_length": {
                    "type": "string",
                    "description": "Override for 'asv_min_length' primer parameter."
                },
                "pp_asv_max_length": {
                    "type": "string",
                    "description": "Override for 'asv_max_length' primer parameter."
                },
                "pp_concat_unmerged": {
                    "type": "string",
                    "description": "Override for 'concat_unmerged' primer parameter."
                },
                "pp_genetic_code": {
                    "type": "string",
                    "description": "Override for 'genetic_code' primer parameter."
                },
                "pp_coding": {
                    "type": "string",
                    "description": "Override for 'coding' primer parameter."
                },
                "pp_phmm": {
                    "type": "string",
                    "description": "Override for 'phmm' primer parameter."
                },
                "pp_idtaxa_db": {
                    "type": "string",
                    "description": "Override for 'idtaxa_db' primer parameter."
                },
                "pp_ref_fasta": {
                    "type": "string",
                    "description": "Override for 'ref_fasta' primer parameter."
                },
                "pp_idtaxa_confidence": {
                    "type": "string",
                    "description": "Override for 'idtaxa_confidence' primer parameter."
                },
                "pp_run_blast": {
                    "type": "string",
                    "description": "Override for 'run_blast' primer parameter."
                },
                "pp_blast_min_identity": {
                    "type": "string",
                    "description": "Override for 'blast_min_identity' primer parameter."
                },
                "pp_blast_min_coverage": {
                    "type": "string",
                    "description": "Override for 'blast_min_coverage' primer parameter."
                },
                "pp_cluster_threshold": {
                    "type": "string",
                    "description": "Override for 'cluster_threshold' primer parameter."
                },
                "pp_target_kingdom": {
                    "type": "string",
                    "description": "Override for 'target_kingdom' primer parameter."
                },
                "pp_target_phylum": {
                    "type": "string",
                    "description": "Override for 'target_phylum' primer parameter."
                },
                "pp_target_class": {
                    "type": "string",
                    "description": "Override for 'target_class' primer parameter."
                },
                "pp_target_order": {
                    "type": "string",
                    "description": "Override for 'target_order' primer parameter."
                },
                "pp_target_family": {
                    "type": "string",
                    "description": "Override for 'target_family' primer parameter."
                },
                "pp_target_genus": {
                    "type": "string",
                    "description": "Override for 'target_genus' primer parameter."
                },
                "pp_target_species": {
                    "type": "string",
                    "description": "Override for 'target_species' primer parameter."
                },
                "pp_min_sample_reads": {
                    "type": "string",
                    "description": "Override for 'min_sample_reads' primer parameter."
                },
                "pp_min_taxa_reads": {
                    "type": "string",
                    "description": "Override for 'min_taxa_reads' primer parameter."
                },
                "pp_min_taxa_ra": {
                    "type": "string",
                    "description": "Override for 'min_taxa_ra' primer parameter."
                }
            }
        },
        "deugging_options": {
            "title": "Debugging options",
            "type": "object",
            "description": "Arguments that can be used to debug the pipeline; should be used with caution.",
            "properties": {
                "rdata": {
                    "type": "boolean",
                    "description": "Save R environments as an .RData file in each process work directory.",
                    "errorMessage": "Must be set to 'true' or 'false'.",
                    "help_text": "For R-based processes, save the R environments as an .RData file in each process work directory at the successful completion of the process script. Useful for development and debugging, but will increase a run's storage footprint. NOTE: .RData files will not be saved if the R environment exits with an error.",
                    "default": false
                },
                "subsample": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Randomly reduce the number of input samples to this value.",
                    "errorMessage": "Must be an integer >=1 (or 'null').",
                    "help_text": "Useful to quickly test how the pipeline behaves with a particular dataset. Subsampling is pseudorandom (seed = 1), so should always reproduce the same subset for the same inputs."
                },
                "downsample_reads": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Randomly reduce the number of reads per input samples to at most this value.",
                    "errorMessage": "Must be an integer >=1 (or 'null').",
                    "help_text": "Useful to quickly test how the pipeline behaves with a particular dataset. Downsampling is pseudorandom (seed = 1), so should always reproduce the same subset of reads for the same inputs."
                },
                "debug_mode": {
                    "type": "boolean",
                    "description": "Saves all process outputs (ie. largely intermediate files) to 'output/modules'.",
                    "errorMessage": "Must be set to 'true' or 'false'.",
                    "help_text": "Saves all process outputs (ie. largely intermediate files) to 'output/modules'.",
                    "default": false
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        }
    }
}