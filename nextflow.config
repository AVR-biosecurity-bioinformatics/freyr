/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    piperline Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    help                = null

    ///// Input options
    data_folder         = "test_data/dual"                  // location of read data; path
    refdir              = "reference"                       // location of reference databases; path
    samplesheet         = "test_data/dual/samplesheet.csv"  // location of samplesheet .csv; path   
    // samplesheet         = "inputs/samplesheet.csv"          // location of samplesheet .csv; path [DEFAULT FOR LATER ON]   
    loci_params         = "test_data/dual/loci_params.csv"  // location of locus parameters .csv; path
    // loci_params         = "inputs/loci_params.csv"          // location of locus parameters .csv; path [DEFAULT FOR LATER ON]

    extension           = null                              // extension of the .fastq read files, immediately after the digit indicating forward/reverse identity; string
    illumina            = true                              // data input is Illumina reads; boolean
    pacbio              = false                             // data input is PacBio reads; boolean
    nanopore            = false                             // data input is Nanopore reads; boolean
    paired              = true                              // Illumina data input is paired-end; boolean

    /// TODO: replace this with equivalent input-file option
    high_sensitivity    = true                              // enable dada2 high-sensitivity (pseudo-pooling) mode; boolean

    threads             = null                              // threads for multithreading; integer

    rdata               = true                              // save all data/objects from process-level R sessions as .RData files in work dir; boolean
}

profiles {
    debug {
        // 
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        charliecloud.enabled   = false
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false        
        shifter.enabled        = false
        singularity.enabled    = false
    }
    //// this profile is not enabled because charliecloud does not seem to work 
    // charliecloud {
    //     apptainer.enabled      = false
    //     charliecloud.enabled   = true
    //     conda.enabled          = false
    //     docker.enabled         = false
    //     podman.enabled         = false        
    //     shifter.enabled        = false
    //     singularity.enabled    = false
    // }
    conda {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = true
        docker.enabled         = false
        podman.enabled         = false        
        shifter.enabled        = false
        singularity.enabled    = false
    }
    docker {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = false
        docker.enabled         = true
        docker.runOptions      = '-u $(id -u):$(id -g)'
        podman.enabled         = false        
        shifter.enabled        = false
        singularity.enabled    = false
    }
    podman {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = true        
        shifter.enabled        = false
        singularity.enabled    = false
    }
    shifter {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false        
        shifter.enabled        = true
        singularity.enabled    = false
    }
    singularity {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false        
        shifter.enabled        = false
        singularity.enabled    = true
        singularity.autoMounts = true
    }
    basc_slurm {
        process.executor        = 'slurm'
        process.queue           = 'batch'
        process.memory          = '10 GB'
        process.time            = '1 hour'
        process.cpus            = 1
        process.module          = 'shifter' // this runs 'module load shifter' at the start of each process job
        // process.beforeScript    = 'module load shifter' // this would also do the same thing as above line
        shifter.enabled         = true
    }
    test {
        process.memory          = '2 GB'
        process.time            = '3 min'
        process.cpus            = 1
        params.samplesheet      = 'test_data/dual/samplesheet_read_dir.csv'
        params.loci_params      = "test_data/dual/loci_params.csv"
    }
}





plugins {
    id 'nf-schema@2.0.0'                            // create schema to validate sample sheets and pipeline parameters
}

report {
    enabled             = true
    overwrite           = true
    file                = "output/report.html"
}

trace {
    enabled             = true
    overwrite           = true
    file                = "trace/trace.txt"
}

dag {
    enabled             = true
    overwrite           = true
    file                = "output/dag.html"
    verbose             = true
}

timeline {
    enabled             = true
    overwrite           = true
    file                = "output/timeline.html"
}
